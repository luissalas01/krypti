{
  "contractName": "Krypti",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_ownerAddress",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        }
      ],
      "name": "allowance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "cap",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "decimals",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "subtractedValue",
          "type": "uint256"
        }
      ],
      "name": "decreaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "addedValue",
          "type": "uint256"
        }
      ],
      "name": "increaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "releaseDate",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.7.0+commit.9e61f92b\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_ownerAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"cap\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"releaseDate\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"cap()\":{\"details\":\"Returns the cap on the token's total supply.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5,05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless {_setupDecimals} is called. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `amount`. - the caller must have allowance for ``sender``'s tokens of at least `amount`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"/I/Users/Luis/Documents/GitHub/blockchain/krypti/contracts/Krypti.sol\":\"Krypti\"},\"evmVersion\":\"byzantium\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"/I/Users/Luis/Documents/GitHub/blockchain/krypti/contracts/Krypti.sol\":{\"keccak256\":\"0x7bc6a9b3a4ca140d4b0935c254335bc673d9496f4bbb428e228fdf780970f57e\",\"urls\":[\"bzz-raw://95c47945ddf047799d6a89621e5e736dc92f590795d16eb3acd4b92bd859f445\",\"dweb:/ipfs/QmedzUJxi1X8KyyokYLqLJepKixSCNpHtJBY3Ef3LSEBM3\"]},\"@openzeppelin/contracts/math/SafeMath.sol\":{\"keccak256\":\"0x84ede4cea94f436b1d6ee43d1d107cd6723fe3eb3e84a92f96cc3dd5b255d62b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9cbca39399d2027da8028b224d2c74386ef2ed0d0512a660e51beb9a0a48cba0\",\"dweb:/ipfs/QmXHBqqHu4p6YLDMdm4ZNQCMr5yEEAVm6hc6vDr5n8YCBm\"]},\"@openzeppelin/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x902d27135146d838b9eb713746594907b6292d50c11ceb791ef3af36a05282ba\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3a0343f918122c9e7e02d26b0d6a45e6c0882bd03cea66298de2fb0a4390670b\",\"dweb:/ipfs/QmT2PxByghLeb6B7KYcA8A1RtgDXoX1Mooo6F7napGSa1s\"]},\"@openzeppelin/contracts/token/ERC20/ERC20Capped.sol\":{\"keccak256\":\"0x72b1a4f3e9f9c7693b111995fa45e8acced65985824e46176a85327635b0d3b3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4570000705397f8372149f9bdb9f09b0cd6893b9c535eb6661029490124f0e1e\",\"dweb:/ipfs/QmXw3TVYHcXHQohonTt1GR9ASpiKiBNoKS4r6DrwQkeAhB\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xb1b439fbc95b6285b8a37a7c25bbfe77644b4706d8405709bd575a0e6d67191b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1c8fe1dd8140000fbbe4dd3899c15a20ea60d3ca1f9bff27ea21b9a2ff634e5a\",\"dweb:/ipfs/QmWgpKXT8syjcKdGtYUZjceghbSQmc9LVkzSYPxDwWrvnn\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xbc7f2f08b805e299fa2d5e702051171f670ded2808044dfeb6fab4357f167138\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://53f7f10bb120dca002788bc57a82cb2b17178312ed95c55a378a77f9a0803ee3\",\"dweb:/ipfs/QmYPMCJo9HA9WuvkTaCHJVGipyXNUr3skeEVSXj3QJgc8U\"]}},\"version\":1}",
  "bytecode": "0x60806040523480156200001157600080fd5b50604051620018e2380380620018e2833981810160405260208110156200003757600080fd5b8101908080519060200190929190505050620186a06040518060400160405280600681526020017f4b727970746900000000000000000000000000000000000000000000000000008152506040518060400160405280600481526020017f4b525054000000000000000000000000000000000000000000000000000000008152508160039080519060200190620000d0929190620005d3565b508060049080519060200190620000e9929190620005d3565b506012600560006101000a81548160ff021916908360ff1602179055505050600081116200017f576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260158152602001807f45524332304361707065643a206361702069732030000000000000000000000081525060200191505060405180910390fd5b8060068190555050620001a26000620001ce640100000000026401000000009004565b620001c081620186a0620001ec640100000000026401000000009004565b426007819055505062000679565b80600560006101000a81548160ff021916908360ff16021790555050565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16141562000290576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601f8152602001807f45524332303a206d696e7420746f20746865207a65726f20616464726573730081525060200191505060405180910390fd5b620002ad60008383620003e5640100000000026401000000009004565b620002d2816002546200040b6401000000000262000a2f179091906401000000009004565b60028190555062000339816000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546200040b6401000000000262000a2f179091906401000000009004565b6000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040518082815260200191505060405180910390a35050565b62000406838383620004946401000000000262000ab7176401000000009004565b505050565b6000808284019050838110156200048a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601b8152602001807f536166654d6174683a206164646974696f6e206f766572666c6f77000000000081525060200191505060405180910390fd5b8091505092915050565b620004b5838383620005ba6401000000000262000b93176401000000009004565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415620005b55762000504620005bf640100000000026401000000009004565b6200053f8262000522620005c9640100000000026401000000009004565b6200040b6401000000000262000a2f179091906401000000009004565b1115620005b4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260198152602001807f45524332304361707065643a206361702065786365656465640000000000000081525060200191505060405180910390fd5b5b505050565b505050565b6000600654905090565b6000600254905090565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106200061657805160ff191683800117855562000647565b8280016001018555821562000647579182015b828111156200064657825182559160200191906001019062000629565b5b5090506200065691906200065a565b5090565b5b80821115620006755760008160009055506001016200065b565b5090565b61125980620006896000396000f3fe608060405234801561001057600080fd5b50600436106100ec576000357c01000000000000000000000000000000000000000000000000000000009004806339509351116100a9578063a457c2d711610083578063a457c2d7146103f8578063a9059cbb1461045c578063b9e3e2db146104c0578063dd62ed3e146104de576100ec565b806339509351146102b957806370a082311461031d57806395d89b4114610375576100ec565b806306fdde03146100f1578063095ea7b31461017457806318160ddd146101d857806323b872dd146101f6578063313ce5671461027a578063355274ea1461029b575b600080fd5b6100f9610556565b6040518080602001828103825283818151815260200191508051906020019080838360005b8381101561013957808201518184015260208101905061011e565b50505050905090810190601f1680156101665780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6101c06004803603604081101561018a57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506105f8565b60405180821515815260200191505060405180910390f35b6101e0610616565b6040518082815260200191505060405180910390f35b6102626004803603606081101561020c57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610620565b60405180821515815260200191505060405180910390f35b6102826106f9565b604051808260ff16815260200191505060405180910390f35b6102a3610710565b6040518082815260200191505060405180910390f35b610305600480360360408110156102cf57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019092919050505061071a565b60405180821515815260200191505060405180910390f35b61035f6004803603602081101561033357600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506107cd565b6040518082815260200191505060405180910390f35b61037d610815565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156103bd5780820151818401526020810190506103a2565b50505050905090810190601f1680156103ea5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6104446004803603604081101561040e57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506108b7565b60405180821515815260200191505060405180910390f35b6104a86004803603604081101561047257600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610984565b60405180821515815260200191505060405180910390f35b6104c86109a2565b6040518082815260200191505060405180910390f35b610540600480360360408110156104f457600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506109a8565b6040518082815260200191505060405180910390f35b606060038054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156105ee5780601f106105c3576101008083540402835291602001916105ee565b820191906000526020600020905b8154815290600101906020018083116105d157829003601f168201915b5050505050905090565b600061060c610605610b98565b8484610ba0565b6001905092915050565b6000600254905090565b600061062d848484610d97565b6106ee84610639610b98565b6106e98560405180606001604052806028815260200161118e60289139600160008b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600061069f610b98565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546110589092919063ffffffff16565b610ba0565b600190509392505050565b6000600560009054906101000a900460ff16905090565b6000600654905090565b60006107c3610727610b98565b846107be8560016000610738610b98565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610a2f90919063ffffffff16565b610ba0565b6001905092915050565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b606060048054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156108ad5780601f10610882576101008083540402835291602001916108ad565b820191906000526020600020905b81548152906001019060200180831161089057829003601f168201915b5050505050905090565b600061097a6108c4610b98565b84610975856040518060600160405280602581526020016111ff60259139600160006108ee610b98565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546110589092919063ffffffff16565b610ba0565b6001905092915050565b6000610998610991610b98565b8484610d97565b6001905092915050565b60075481565b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b600080828401905083811015610aad576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601b8152602001807f536166654d6174683a206164646974696f6e206f766572666c6f77000000000081525060200191505060405180910390fd5b8091505092915050565b610ac2838383610b93565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415610b8e57610aff610710565b610b1982610b0b610616565b610a2f90919063ffffffff16565b1115610b8d576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260198152602001807f45524332304361707065643a206361702065786365656465640000000000000081525060200191505060405180910390fd5b5b505050565b505050565b600033905090565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415610c26576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260248152602001806111db6024913960400191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610cac576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260228152602001806111466022913960400191505060405180910390fd5b80600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925836040518082815260200191505060405180910390a3505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415610e1d576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260258152602001806111b66025913960400191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610ea3576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260238152602001806111236023913960400191505060405180910390fd5b610eae838383611112565b610f1981604051806060016040528060268152602001611168602691396000808773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546110589092919063ffffffff16565b6000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550610fac816000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610a2f90919063ffffffff16565b6000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040518082815260200191505060405180910390a3505050565b6000838311158290611105576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825283818151815260200191508051906020019080838360005b838110156110ca5780820151818401526020810190506110af565b50505050905090810190601f1680156110f75780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b5082840390509392505050565b61111d838383610ab7565b50505056fe45524332303a207472616e7366657220746f20746865207a65726f206164647265737345524332303a20617070726f766520746f20746865207a65726f206164647265737345524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e636545524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e636545524332303a207472616e736665722066726f6d20746865207a65726f206164647265737345524332303a20617070726f76652066726f6d20746865207a65726f206164647265737345524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726fa2646970667358221220b74ce14d0461a4718b1faebea827c0b72550c05a25b64c0b1d755f35681db91e64736f6c63430007000033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100ec576000357c01000000000000000000000000000000000000000000000000000000009004806339509351116100a9578063a457c2d711610083578063a457c2d7146103f8578063a9059cbb1461045c578063b9e3e2db146104c0578063dd62ed3e146104de576100ec565b806339509351146102b957806370a082311461031d57806395d89b4114610375576100ec565b806306fdde03146100f1578063095ea7b31461017457806318160ddd146101d857806323b872dd146101f6578063313ce5671461027a578063355274ea1461029b575b600080fd5b6100f9610556565b6040518080602001828103825283818151815260200191508051906020019080838360005b8381101561013957808201518184015260208101905061011e565b50505050905090810190601f1680156101665780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6101c06004803603604081101561018a57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506105f8565b60405180821515815260200191505060405180910390f35b6101e0610616565b6040518082815260200191505060405180910390f35b6102626004803603606081101561020c57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610620565b60405180821515815260200191505060405180910390f35b6102826106f9565b604051808260ff16815260200191505060405180910390f35b6102a3610710565b6040518082815260200191505060405180910390f35b610305600480360360408110156102cf57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019092919050505061071a565b60405180821515815260200191505060405180910390f35b61035f6004803603602081101561033357600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506107cd565b6040518082815260200191505060405180910390f35b61037d610815565b6040518080602001828103825283818151815260200191508051906020019080838360005b838110156103bd5780820151818401526020810190506103a2565b50505050905090810190601f1680156103ea5780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b6104446004803603604081101561040e57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291905050506108b7565b60405180821515815260200191505060405180910390f35b6104a86004803603604081101561047257600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610984565b60405180821515815260200191505060405180910390f35b6104c86109a2565b6040518082815260200191505060405180910390f35b610540600480360360408110156104f457600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506109a8565b6040518082815260200191505060405180910390f35b606060038054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156105ee5780601f106105c3576101008083540402835291602001916105ee565b820191906000526020600020905b8154815290600101906020018083116105d157829003601f168201915b5050505050905090565b600061060c610605610b98565b8484610ba0565b6001905092915050565b6000600254905090565b600061062d848484610d97565b6106ee84610639610b98565b6106e98560405180606001604052806028815260200161118e60289139600160008b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600061069f610b98565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546110589092919063ffffffff16565b610ba0565b600190509392505050565b6000600560009054906101000a900460ff16905090565b6000600654905090565b60006107c3610727610b98565b846107be8560016000610738610b98565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610a2f90919063ffffffff16565b610ba0565b6001905092915050565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020549050919050565b606060048054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156108ad5780601f10610882576101008083540402835291602001916108ad565b820191906000526020600020905b81548152906001019060200180831161089057829003601f168201915b5050505050905090565b600061097a6108c4610b98565b84610975856040518060600160405280602581526020016111ff60259139600160006108ee610b98565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546110589092919063ffffffff16565b610ba0565b6001905092915050565b6000610998610991610b98565b8484610d97565b6001905092915050565b60075481565b6000600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054905092915050565b600080828401905083811015610aad576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601b8152602001807f536166654d6174683a206164646974696f6e206f766572666c6f77000000000081525060200191505060405180910390fd5b8091505092915050565b610ac2838383610b93565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415610b8e57610aff610710565b610b1982610b0b610616565b610a2f90919063ffffffff16565b1115610b8d576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260198152602001807f45524332304361707065643a206361702065786365656465640000000000000081525060200191505060405180910390fd5b5b505050565b505050565b600033905090565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415610c26576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260248152602001806111db6024913960400191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610cac576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260228152602001806111466022913960400191505060405180910390fd5b80600160008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925836040518082815260200191505060405180910390a3505050565b600073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415610e1d576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260258152602001806111b66025913960400191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161415610ea3576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260238152602001806111236023913960400191505060405180910390fd5b610eae838383611112565b610f1981604051806060016040528060268152602001611168602691396000808773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546110589092919063ffffffff16565b6000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550610fac816000808573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610a2f90919063ffffffff16565b6000808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055508173ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef836040518082815260200191505060405180910390a3505050565b6000838311158290611105576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825283818151815260200191508051906020019080838360005b838110156110ca5780820151818401526020810190506110af565b50505050905090810190601f1680156110f75780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b5082840390509392505050565b61111d838383610ab7565b50505056fe45524332303a207472616e7366657220746f20746865207a65726f206164647265737345524332303a20617070726f766520746f20746865207a65726f206164647265737345524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e636545524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e636545524332303a207472616e736665722066726f6d20746865207a65726f206164647265737345524332303a20617070726f76652066726f6d20746865207a65726f206164647265737345524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726fa2646970667358221220b74ce14d0461a4718b1faebea827c0b72550c05a25b64c0b1d755f35681db91e64736f6c63430007000033",
  "immutableReferences": {},
  "sourceMap": "92:443:1:-:0;;;162:196;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;246:6;2012:149:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2095:5;2087;:13;;;;;;;;;;;;:::i;:::-;;2121:7;2111;:17;;;;;;;;;;;;:::i;:::-;;2151:2;2139:9;;:14;;;;;;;;;;;;;;;;;;2012:149;;486:1:6;479:4;:8;471:42;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;531:4;524;:11;;;;424:119;267:17:1::2;282:1;267:14;;;:17;;;:::i;:::-;290:28;296:13;311:6;290:5;;;:28;;;:::i;:::-;338:15;323:11;:30;;;;162:196:::0;92:443;;10304:98:5;10385:9;10373;;:21;;;;;;;;;;;;;;;;;;10304:98;:::o;8059:378::-;8162:1;8143:21;;:7;:21;;;;8135:65;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8213:49;8242:1;8246:7;8255:6;8213:20;;;:49;;;:::i;:::-;8290:24;8307:6;8290:12;;:16;;;;;;:24;;;;;:::i;:::-;8275:12;:39;;;;8346:30;8369:6;8346:9;:18;8356:7;8346:18;;;;;;;;;;;;;;;;:22;;;;;;:30;;;;;:::i;:::-;8325:9;:18;8335:7;8325:18;;;;;;;;;;;;;;;:51;;;;8413:7;8392:37;;8409:1;8392:37;;;8422:6;8392:37;;;;;;;;;;;;;;;;;;8059:378;;:::o;363:167:1:-;478:44;505:4;511:2;515:6;478:26;;;;;:44;;;:::i;:::-;363:167;;;:::o;2774:179:4:-;2832:7;2852:9;2868:1;2864;:5;2852:17;;2893:1;2888;:6;;2880:46;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2944:1;2937:8;;;2774:179;;;;:::o;897:319:6:-;1006:44;1033:4;1039:2;1043:6;1006:26;;;;;:44;;;:::i;:::-;1083:1;1067:18;;:4;:18;;;1063:146;;;1162:5;:3;;;:5;;;:::i;:::-;1133:25;1151:6;1133:13;:11;;;:13;;;:::i;:::-;:17;;;;;;:25;;;;;:::i;:::-;:34;;1125:72;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1063:146;897:319;;;:::o;11005:92:5:-;;;;:::o;627:83:6:-;671:7;698:4;;691:11;;627:83;:::o;3330:108:5:-;3391:7;3418:12;;3411:19;;3330:108;:::o;92:443:1:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;",
  "deployedSourceMap": "92:443:1:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2231:91:5;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4377:169;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;3330:108;;;:::i;:::-;;;;;;;;;;;;;;;;;;;5028:321;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;3174:91;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;627:83:6;;;:::i;:::-;;;;;;;;;;;;;;;;;;;5758:218:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;3501:127;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;2441:95;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6479:269;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;3841:175;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;130:26:1;;;:::i;:::-;;;;;;;;;;;;;;;;;;;4079:151:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;2231:91;2276:13;2309:5;2302:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2231:91;:::o;4377:169::-;4460:4;4477:39;4486:12;:10;:12::i;:::-;4500:7;4509:6;4477:8;:39::i;:::-;4534:4;4527:11;;4377:169;;;;:::o;3330:108::-;3391:7;3418:12;;3411:19;;3330:108;:::o;5028:321::-;5134:4;5151:36;5161:6;5169:9;5180:6;5151:9;:36::i;:::-;5198:121;5207:6;5215:12;:10;:12::i;:::-;5229:89;5267:6;5229:89;;;;;;;;;;;;;;;;;:11;:19;5241:6;5229:19;;;;;;;;;;;;;;;:33;5249:12;:10;:12::i;:::-;5229:33;;;;;;;;;;;;;;;;:37;;:89;;;;;:::i;:::-;5198:8;:121::i;:::-;5337:4;5330:11;;5028:321;;;;;:::o;3174:91::-;3223:5;3248:9;;;;;;;;;;;3241:16;;3174:91;:::o;627:83:6:-;671:7;698:4;;691:11;;627:83;:::o;5758:218:5:-;5846:4;5863:83;5872:12;:10;:12::i;:::-;5886:7;5895:50;5934:10;5895:11;:25;5907:12;:10;:12::i;:::-;5895:25;;;;;;;;;;;;;;;:34;5921:7;5895:34;;;;;;;;;;;;;;;;:38;;:50;;;;:::i;:::-;5863:8;:83::i;:::-;5964:4;5957:11;;5758:218;;;;:::o;3501:127::-;3575:7;3602:9;:18;3612:7;3602:18;;;;;;;;;;;;;;;;3595:25;;3501:127;;;:::o;2441:95::-;2488:13;2521:7;2514:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2441:95;:::o;6479:269::-;6572:4;6589:129;6598:12;:10;:12::i;:::-;6612:7;6621:96;6660:15;6621:96;;;;;;;;;;;;;;;;;:11;:25;6633:12;:10;:12::i;:::-;6621:25;;;;;;;;;;;;;;;:34;6647:7;6621:34;;;;;;;;;;;;;;;;:38;;:96;;;;;:::i;:::-;6589:8;:129::i;:::-;6736:4;6729:11;;6479:269;;;;:::o;3841:175::-;3927:4;3944:42;3954:12;:10;:12::i;:::-;3968:9;3979:6;3944:9;:42::i;:::-;4004:4;3997:11;;3841:175;;;;:::o;130:26:1:-;;;;:::o;4079:151:5:-;4168:7;4195:11;:18;4207:5;4195:18;;;;;;;;;;;;;;;:27;4214:7;4195:27;;;;;;;;;;;;;;;;4188:34;;4079:151;;;;:::o;2774:179:4:-;2832:7;2852:9;2868:1;2864;:5;2852:17;;2893:1;2888;:6;;2880:46;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2944:1;2937:8;;;2774:179;;;;:::o;897:319:6:-;1006:44;1033:4;1039:2;1043:6;1006:26;:44::i;:::-;1083:1;1067:18;;:4;:18;;;1063:146;;;1162:5;:3;:5::i;:::-;1133:25;1151:6;1133:13;:11;:13::i;:::-;:17;;:25;;;;:::i;:::-;:34;;1125:72;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1063:146;897:319;;;:::o;11005:92:5:-;;;;:::o;613:106:8:-;666:15;701:10;694:17;;613:106;:::o;9626:346:5:-;9745:1;9728:19;;:5;:19;;;;9720:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9826:1;9807:21;;:7;:21;;;;9799:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9910:6;9880:11;:18;9892:5;9880:18;;;;;;;;;;;;;;;:27;9899:7;9880:27;;;;;;;;;;;;;;;:36;;;;9948:7;9932:32;;9941:5;9932:32;;;9957:6;9932:32;;;;;;;;;;;;;;;;;;9626:346;;;:::o;7238:539::-;7362:1;7344:20;;:6;:20;;;;7336:70;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7446:1;7425:23;;:9;:23;;;;7417:71;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7501:47;7522:6;7530:9;7541:6;7501:20;:47::i;:::-;7581:71;7603:6;7581:71;;;;;;;;;;;;;;;;;:9;:17;7591:6;7581:17;;;;;;;;;;;;;;;;:21;;:71;;;;;:::i;:::-;7561:9;:17;7571:6;7561:17;;;;;;;;;;;;;;;:91;;;;7686:32;7711:6;7686:9;:20;7696:9;7686:20;;;;;;;;;;;;;;;;:24;;:32;;;;:::i;:::-;7663:9;:20;7673:9;7663:20;;;;;;;;;;;;;;;:55;;;;7751:9;7734:35;;7743:6;7734:35;;;7762:6;7734:35;;;;;;;;;;;;;;;;;;7238:539;;;:::o;5601:166:4:-;5687:7;5720:1;5715;:6;;5723:12;5707:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5758:1;5754;:5;5747:12;;5601:166;;;;;:::o;363:167:1:-;478:44;505:4;511:2;515:6;478:26;:44::i;:::-;363:167;;;:::o",
  "source": "pragma solidity ^0.7.0;\r\n\r\nimport \"@openzeppelin/contracts/token/ERC20/ERC20Capped.sol\";\r\n\r\ncontract Krypti is ERC20Capped {\r\n\t\r\n\tuint256 public releaseDate;\r\n\r\n\tconstructor(\r\n\t\taddress _ownerAddress\r\n\t)\r\n\r\n\tERC20(\"Krypti\", \"KRPT\")\r\n\tERC20Capped(100000)\r\n\tpublic{\r\n\t\t_setupDecimals(0);\r\n\t\t _mint(_ownerAddress, 100000);\r\n\t\treleaseDate  = block.timestamp;\r\n\t}\r\n\r\n\tfunction _beforeTokenTransfer(address from, address to, uint256 amount) internal override (ERC20Capped) {\r\n        super._beforeTokenTransfer(from, to, amount);\r\n    }\r\n\r\n}",
  "sourcePath": "I:/Users/Luis/Documents/GitHub/blockchain/krypti/contracts/Krypti.sol",
  "ast": {
    "absolutePath": "/I/Users/Luis/Documents/GitHub/blockchain/krypti/contracts/Krypti.sol",
    "exportedSymbols": {
      "Krypti": [
        57
      ]
    },
    "id": 58,
    "license": null,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 4,
        "literals": [
          "solidity",
          "^",
          "0.7",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:1"
      },
      {
        "absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20Capped.sol",
        "file": "@openzeppelin/contracts/token/ERC20/ERC20Capped.sol",
        "id": 5,
        "nodeType": "ImportDirective",
        "scope": 58,
        "sourceUnit": 1507,
        "src": "27:61:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 6,
              "name": "ERC20Capped",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1506,
              "src": "111:11:1",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC20Capped_$1506",
                "typeString": "contract ERC20Capped"
              }
            },
            "id": 7,
            "nodeType": "InheritanceSpecifier",
            "src": "111:11:1"
          }
        ],
        "contractDependencies": [
          1427,
          1506,
          1584,
          1607
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 57,
        "linearizedBaseContracts": [
          57,
          1506,
          1427,
          1584,
          1607
        ],
        "name": "Krypti",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "functionSelector": "b9e3e2db",
            "id": 9,
            "mutability": "mutable",
            "name": "releaseDate",
            "nodeType": "VariableDeclaration",
            "overrides": null,
            "scope": 57,
            "src": "130:26:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 8,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "130:7:1",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 35,
              "nodeType": "Block",
              "src": "262:96:1",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "hexValue": "30",
                        "id": 22,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "282:1:1",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "id": 21,
                      "name": "_setupDecimals",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1415,
                      "src": "267:14:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint8_$returns$__$",
                        "typeString": "function (uint8)"
                      }
                    },
                    "id": 23,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "267:17:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 24,
                  "nodeType": "ExpressionStatement",
                  "src": "267:17:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 26,
                        "name": "_ownerAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 11,
                        "src": "296:13:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "313030303030",
                        "id": 27,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "311:6:1",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_100000_by_1",
                          "typeString": "int_const 100000"
                        },
                        "value": "100000"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_100000_by_1",
                          "typeString": "int_const 100000"
                        }
                      ],
                      "id": 25,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1303,
                      "src": "290:5:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 28,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "290:28:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 29,
                  "nodeType": "ExpressionStatement",
                  "src": "290:28:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 33,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 30,
                      "name": "releaseDate",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 9,
                      "src": "323:11:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 31,
                        "name": "block",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -4,
                        "src": "338:5:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_block",
                          "typeString": "block"
                        }
                      },
                      "id": 32,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "timestamp",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "338:15:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "323:30:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 34,
                  "nodeType": "ExpressionStatement",
                  "src": "323:30:1"
                }
              ]
            },
            "documentation": null,
            "id": 36,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "hexValue": "4b7279707469",
                    "id": 14,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "214:8:1",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_4ecb78f921d20b7a024e4af8d592cc1dd3b2f9a11e24795cc468e502e610258a",
                      "typeString": "literal_string \"Krypti\""
                    },
                    "value": "Krypti"
                  },
                  {
                    "argumentTypes": null,
                    "hexValue": "4b525054",
                    "id": 15,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "224:6:1",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_aa38e9309d15d73239020608d54671b98d428f80d9bd77d21e35694f2c0b49e7",
                      "typeString": "literal_string \"KRPT\""
                    },
                    "value": "KRPT"
                  }
                ],
                "id": 16,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 13,
                  "name": "ERC20",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 1427,
                  "src": "208:5:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_ERC20_$1427_$",
                    "typeString": "type(contract ERC20)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "208:23:1"
              },
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "hexValue": "313030303030",
                    "id": 18,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "246:6:1",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_100000_by_1",
                      "typeString": "int_const 100000"
                    },
                    "value": "100000"
                  }
                ],
                "id": 19,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 17,
                  "name": "ERC20Capped",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 1506,
                  "src": "234:11:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_ERC20Capped_$1506_$",
                    "typeString": "type(contract ERC20Capped)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "234:19:1"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 12,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 11,
                  "mutability": "mutable",
                  "name": "_ownerAddress",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 36,
                  "src": "178:21:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 10,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "178:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "173:30:1"
            },
            "returnParameters": {
              "id": 20,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "262:0:1"
            },
            "scope": 57,
            "src": "162:196:1",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "baseFunctions": [
              1505
            ],
            "body": {
              "id": 55,
              "nodeType": "Block",
              "src": "467:63:1",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 50,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 38,
                        "src": "505:4:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 51,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 40,
                        "src": "511:2:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 52,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 42,
                        "src": "515:6:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 47,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -25,
                        "src": "478:5:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_super$_Krypti_$57",
                          "typeString": "contract super Krypti"
                        }
                      },
                      "id": 49,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "_beforeTokenTransfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 1505,
                      "src": "478:26:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 53,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "478:44:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 54,
                  "nodeType": "ExpressionStatement",
                  "src": "478:44:1"
                }
              ]
            },
            "documentation": null,
            "id": 56,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_beforeTokenTransfer",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 45,
              "nodeType": "OverrideSpecifier",
              "overrides": [
                {
                  "contractScope": null,
                  "id": 44,
                  "name": "ERC20Capped",
                  "nodeType": "UserDefinedTypeName",
                  "referencedDeclaration": 1506,
                  "src": "454:11:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ERC20Capped_$1506",
                    "typeString": "contract ERC20Capped"
                  }
                }
              ],
              "src": "444:22:1"
            },
            "parameters": {
              "id": 43,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 38,
                  "mutability": "mutable",
                  "name": "from",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 56,
                  "src": "393:12:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 37,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "393:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 40,
                  "mutability": "mutable",
                  "name": "to",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 56,
                  "src": "407:10:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 39,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "407:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 42,
                  "mutability": "mutable",
                  "name": "amount",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 56,
                  "src": "419:14:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 41,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "419:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "392:42:1"
            },
            "returnParameters": {
              "id": 46,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "467:0:1"
            },
            "scope": 57,
            "src": "363:167:1",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          }
        ],
        "scope": 58,
        "src": "92:443:1"
      }
    ],
    "src": "0:535:1"
  },
  "legacyAST": {
    "attributes": {
      "absolutePath": "/I/Users/Luis/Documents/GitHub/blockchain/krypti/contracts/Krypti.sol",
      "exportedSymbols": {
        "Krypti": [
          57
        ]
      },
      "license": null
    },
    "children": [
      {
        "attributes": {
          "literals": [
            "solidity",
            "^",
            "0.7",
            ".0"
          ]
        },
        "id": 4,
        "name": "PragmaDirective",
        "src": "0:23:1"
      },
      {
        "attributes": {
          "SourceUnit": 1507,
          "absolutePath": "@openzeppelin/contracts/token/ERC20/ERC20Capped.sol",
          "file": "@openzeppelin/contracts/token/ERC20/ERC20Capped.sol",
          "scope": 58,
          "symbolAliases": [
            null
          ],
          "unitAlias": ""
        },
        "id": 5,
        "name": "ImportDirective",
        "src": "27:61:1"
      },
      {
        "attributes": {
          "abstract": false,
          "contractDependencies": [
            1427,
            1506,
            1584,
            1607
          ],
          "contractKind": "contract",
          "documentation": null,
          "fullyImplemented": true,
          "linearizedBaseContracts": [
            57,
            1506,
            1427,
            1584,
            1607
          ],
          "name": "Krypti",
          "scope": 58
        },
        "children": [
          {
            "attributes": {
              "arguments": null
            },
            "children": [
              {
                "attributes": {
                  "contractScope": null,
                  "name": "ERC20Capped",
                  "referencedDeclaration": 1506,
                  "type": "contract ERC20Capped"
                },
                "id": 6,
                "name": "UserDefinedTypeName",
                "src": "111:11:1"
              }
            ],
            "id": 7,
            "name": "InheritanceSpecifier",
            "src": "111:11:1"
          },
          {
            "attributes": {
              "constant": false,
              "functionSelector": "b9e3e2db",
              "mutability": "mutable",
              "name": "releaseDate",
              "overrides": null,
              "scope": 57,
              "stateVariable": true,
              "storageLocation": "default",
              "type": "uint256",
              "value": null,
              "visibility": "public"
            },
            "children": [
              {
                "attributes": {
                  "name": "uint256",
                  "type": "uint256"
                },
                "id": 8,
                "name": "ElementaryTypeName",
                "src": "130:7:1"
              }
            ],
            "id": 9,
            "name": "VariableDeclaration",
            "src": "130:26:1"
          },
          {
            "attributes": {
              "documentation": null,
              "implemented": true,
              "isConstructor": true,
              "kind": "constructor",
              "name": "",
              "overrides": null,
              "scope": 57,
              "stateMutability": "nonpayable",
              "virtual": false,
              "visibility": "public"
            },
            "children": [
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "_ownerAddress",
                      "overrides": null,
                      "scope": 36,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "address",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "address",
                          "stateMutability": "nonpayable",
                          "type": "address"
                        },
                        "id": 10,
                        "name": "ElementaryTypeName",
                        "src": "178:7:1"
                      }
                    ],
                    "id": 11,
                    "name": "VariableDeclaration",
                    "src": "178:21:1"
                  }
                ],
                "id": 12,
                "name": "ParameterList",
                "src": "173:30:1"
              },
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 20,
                "name": "ParameterList",
                "src": "262:0:1"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "argumentTypes": null,
                      "overloadedDeclarations": [
                        null
                      ],
                      "referencedDeclaration": 1427,
                      "type": "type(contract ERC20)",
                      "value": "ERC20"
                    },
                    "id": 13,
                    "name": "Identifier",
                    "src": "208:5:1"
                  },
                  {
                    "attributes": {
                      "argumentTypes": null,
                      "hexvalue": "4b7279707469",
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "subdenomination": null,
                      "token": "string",
                      "type": "literal_string \"Krypti\"",
                      "value": "Krypti"
                    },
                    "id": 14,
                    "name": "Literal",
                    "src": "214:8:1"
                  },
                  {
                    "attributes": {
                      "argumentTypes": null,
                      "hexvalue": "4b525054",
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "subdenomination": null,
                      "token": "string",
                      "type": "literal_string \"KRPT\"",
                      "value": "KRPT"
                    },
                    "id": 15,
                    "name": "Literal",
                    "src": "224:6:1"
                  }
                ],
                "id": 16,
                "name": "ModifierInvocation",
                "src": "208:23:1"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "argumentTypes": null,
                      "overloadedDeclarations": [
                        null
                      ],
                      "referencedDeclaration": 1506,
                      "type": "type(contract ERC20Capped)",
                      "value": "ERC20Capped"
                    },
                    "id": 17,
                    "name": "Identifier",
                    "src": "234:11:1"
                  },
                  {
                    "attributes": {
                      "argumentTypes": null,
                      "hexvalue": "313030303030",
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "subdenomination": null,
                      "token": "number",
                      "type": "int_const 100000",
                      "value": "100000"
                    },
                    "id": 18,
                    "name": "Literal",
                    "src": "246:6:1"
                  }
                ],
                "id": 19,
                "name": "ModifierInvocation",
                "src": "234:19:1"
              },
              {
                "children": [
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "tryCall": false,
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 1415,
                              "type": "function (uint8)",
                              "value": "_setupDecimals"
                            },
                            "id": 21,
                            "name": "Identifier",
                            "src": "267:14:1"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "hexvalue": "30",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "subdenomination": null,
                              "token": "number",
                              "type": "int_const 0",
                              "value": "0"
                            },
                            "id": 22,
                            "name": "Literal",
                            "src": "282:1:1"
                          }
                        ],
                        "id": 23,
                        "name": "FunctionCall",
                        "src": "267:17:1"
                      }
                    ],
                    "id": 24,
                    "name": "ExpressionStatement",
                    "src": "267:17:1"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "tryCall": false,
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                {
                                  "typeIdentifier": "t_rational_100000_by_1",
                                  "typeString": "int_const 100000"
                                }
                              ],
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 1303,
                              "type": "function (address,uint256)",
                              "value": "_mint"
                            },
                            "id": 25,
                            "name": "Identifier",
                            "src": "290:5:1"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 11,
                              "type": "address",
                              "value": "_ownerAddress"
                            },
                            "id": 26,
                            "name": "Identifier",
                            "src": "296:13:1"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "hexvalue": "313030303030",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "subdenomination": null,
                              "token": "number",
                              "type": "int_const 100000",
                              "value": "100000"
                            },
                            "id": 27,
                            "name": "Literal",
                            "src": "311:6:1"
                          }
                        ],
                        "id": 28,
                        "name": "FunctionCall",
                        "src": "290:28:1"
                      }
                    ],
                    "id": 29,
                    "name": "ExpressionStatement",
                    "src": "290:28:1"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": "=",
                          "type": "uint256"
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 9,
                              "type": "uint256",
                              "value": "releaseDate"
                            },
                            "id": 30,
                            "name": "Identifier",
                            "src": "323:11:1"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "member_name": "timestamp",
                              "referencedDeclaration": null,
                              "type": "uint256"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": -4,
                                  "type": "block",
                                  "value": "block"
                                },
                                "id": 31,
                                "name": "Identifier",
                                "src": "338:5:1"
                              }
                            ],
                            "id": 32,
                            "name": "MemberAccess",
                            "src": "338:15:1"
                          }
                        ],
                        "id": 33,
                        "name": "Assignment",
                        "src": "323:30:1"
                      }
                    ],
                    "id": 34,
                    "name": "ExpressionStatement",
                    "src": "323:30:1"
                  }
                ],
                "id": 35,
                "name": "Block",
                "src": "262:96:1"
              }
            ],
            "id": 36,
            "name": "FunctionDefinition",
            "src": "162:196:1"
          },
          {
            "attributes": {
              "baseFunctions": [
                1505
              ],
              "documentation": null,
              "implemented": true,
              "isConstructor": false,
              "kind": "function",
              "modifiers": [
                null
              ],
              "name": "_beforeTokenTransfer",
              "scope": 57,
              "stateMutability": "nonpayable",
              "virtual": false,
              "visibility": "internal"
            },
            "children": [
              {
                "children": [
                  {
                    "attributes": {
                      "contractScope": null,
                      "name": "ERC20Capped",
                      "referencedDeclaration": 1506,
                      "type": "contract ERC20Capped"
                    },
                    "id": 44,
                    "name": "UserDefinedTypeName",
                    "src": "454:11:1"
                  }
                ],
                "id": 45,
                "name": "OverrideSpecifier",
                "src": "444:22:1"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "from",
                      "overrides": null,
                      "scope": 56,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "address",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "address",
                          "stateMutability": "nonpayable",
                          "type": "address"
                        },
                        "id": 37,
                        "name": "ElementaryTypeName",
                        "src": "393:7:1"
                      }
                    ],
                    "id": 38,
                    "name": "VariableDeclaration",
                    "src": "393:12:1"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "to",
                      "overrides": null,
                      "scope": 56,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "address",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "address",
                          "stateMutability": "nonpayable",
                          "type": "address"
                        },
                        "id": 39,
                        "name": "ElementaryTypeName",
                        "src": "407:7:1"
                      }
                    ],
                    "id": 40,
                    "name": "VariableDeclaration",
                    "src": "407:10:1"
                  },
                  {
                    "attributes": {
                      "constant": false,
                      "mutability": "mutable",
                      "name": "amount",
                      "overrides": null,
                      "scope": 56,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "uint256",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "uint256",
                          "type": "uint256"
                        },
                        "id": 41,
                        "name": "ElementaryTypeName",
                        "src": "419:7:1"
                      }
                    ],
                    "id": 42,
                    "name": "VariableDeclaration",
                    "src": "419:14:1"
                  }
                ],
                "id": 43,
                "name": "ParameterList",
                "src": "392:42:1"
              },
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 46,
                "name": "ParameterList",
                "src": "467:0:1"
              },
              {
                "children": [
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "tryCall": false,
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "member_name": "_beforeTokenTransfer",
                              "referencedDeclaration": 1505,
                              "type": "function (address,address,uint256)"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": -25,
                                  "type": "contract super Krypti",
                                  "value": "super"
                                },
                                "id": 47,
                                "name": "Identifier",
                                "src": "478:5:1"
                              }
                            ],
                            "id": 49,
                            "name": "MemberAccess",
                            "src": "478:26:1"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 38,
                              "type": "address",
                              "value": "from"
                            },
                            "id": 50,
                            "name": "Identifier",
                            "src": "505:4:1"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 40,
                              "type": "address",
                              "value": "to"
                            },
                            "id": 51,
                            "name": "Identifier",
                            "src": "511:2:1"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 42,
                              "type": "uint256",
                              "value": "amount"
                            },
                            "id": 52,
                            "name": "Identifier",
                            "src": "515:6:1"
                          }
                        ],
                        "id": 53,
                        "name": "FunctionCall",
                        "src": "478:44:1"
                      }
                    ],
                    "id": 54,
                    "name": "ExpressionStatement",
                    "src": "478:44:1"
                  }
                ],
                "id": 55,
                "name": "Block",
                "src": "467:63:1"
              }
            ],
            "id": 56,
            "name": "FunctionDefinition",
            "src": "363:167:1"
          }
        ],
        "id": 57,
        "name": "ContractDefinition",
        "src": "92:443:1"
      }
    ],
    "id": 58,
    "name": "SourceUnit",
    "src": "0:535:1"
  },
  "compiler": {
    "name": "solc",
    "version": "0.7.0+commit.9e61f92b.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.3.4",
  "updatedAt": "2021-03-16T19:39:19.252Z",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "allowance(address,address)": {
        "details": "See {IERC20-allowance}."
      },
      "approve(address,uint256)": {
        "details": "See {IERC20-approve}. Requirements: - `spender` cannot be the zero address."
      },
      "balanceOf(address)": {
        "details": "See {IERC20-balanceOf}."
      },
      "cap()": {
        "details": "Returns the cap on the token's total supply."
      },
      "decimals()": {
        "details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5,05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless {_setupDecimals} is called. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
      },
      "decreaseAllowance(address,uint256)": {
        "details": "Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."
      },
      "increaseAllowance(address,uint256)": {
        "details": "Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."
      },
      "name()": {
        "details": "Returns the name of the token."
      },
      "symbol()": {
        "details": "Returns the symbol of the token, usually a shorter version of the name."
      },
      "totalSupply()": {
        "details": "See {IERC20-totalSupply}."
      },
      "transfer(address,uint256)": {
        "details": "See {IERC20-transfer}. Requirements: - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`."
      },
      "transferFrom(address,address,uint256)": {
        "details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `amount`. - the caller must have allowance for ``sender``'s tokens of at least `amount`."
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  }
}